#ifndef GOPHERCAN_{{ module.name }}_H
#define GOPHERCAN_{{ module.name }}_H

// Generated by GopherCANnon

{% if module.parameters_produced -%}
// Produced parameters
{% for parameter in module.parameters_produced %}
// {{ parameters[parameter].human_readable_name }} ({{ parameters[parameter].unit }})
#define {{ parameters[parameter].name.upper() }}_ID {{ parameters[parameter].id }}
#define {{ parameters[parameter].name.upper() }}_TYPE {{ parameters[parameter].type }}
#define {{ parameters[parameter].name.upper() }}_MULTIPLIER {{ parameters[parameter].multiplier }}
#define {{ parameters[parameter].name.upper() }}_DIVISOR {{ parameters[parameter].divisor }}
#define {{ parameters[parameter].name.upper() }}_OFFSET {{ parameters[parameter].offset }}
#define {{ parameters[parameter].name.upper() }}_FREQUENCY {{ parameters[parameter].frequency }}
{% endfor %}
{% endif %}
{% if module.parameters_consumed -%}
// Consumed parameters
{% for parameter in module.parameters_consumed %}
// {{ parameters[parameter].human_readable_name }} ({{ parameters[parameter].unit }})
#define {{ parameters[parameter].name.upper() }}_ID {{ parameters[parameter].id }}
#define {{ parameters[parameter].name.upper() }}_TYPE {{ parameters[parameter].type }}
#define {{ parameters[parameter].name.upper() }}_MULTIPLIER {{ parameters[parameter].multiplier }}
#define {{ parameters[parameter].name.upper() }}_DIVISOR {{ parameters[parameter].divisor }}
#define {{ parameters[parameter].name.upper() }}_OFFSET {{ parameters[parameter].offset }}
#define {{ parameters[parameter].name.upper() }}_FREQUENCY {{ parameters[parameter].frequency }}
#define {{ parameters[parameter].name.upper() }}_PRODUCER_ID {{ modules[parameters[parameter].producer].id }} // {{ modules[parameters[parameter].producer].name }}
{% endfor %}
{% endif %}
#endif // GOPHERCAN_{{ module.name }}_H